import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api, RouterOutputs } from "~/utils/api";

const CreateEventForm: React.FC = () => {

  const { data: sessionData } = useSession();

  if (!sessionData?.user) return null;

  return <div className="flex gap-4 w-full">
    <img
      className="w-24 h-24 rounded-full"
      src={sessionData.user.image || undefined}
      alt="Profile image"
    />
    <input placeholder="Create an event..." className="bg-transparent outline-none grow" />
  </div>
}

type EventWithUser = RouterOutputs["events"]["getAll"][number];

const EventCard = (event: EventWithUser) => {
  return (
    <div
      className="p-8 border-b border-slate-400 flex justify-between items-center"
    >
      <div>{event.title}</div>
      <img
        className="w-12 h-12 rounded-full"
        src={event.author.image || undefined}
        alt="Profile image"
      />
    </div>
  )
}

const Home: NextPage = () => {
  const { data, isLoading } = api.events.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-200">
          <div className="border-b border-slate-400 p-4">
            <AuthShowcase />
          </div>
          <div className="flex flex-col">
            {[...data, ...data].map((event) => (
              <EventCard key={event.id} {...event} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && sessionData.user &&
          <div className="flex justify-between items-center gap-8">
            <CreateEventForm />
            <span>Logged in as {sessionData.user.name}</span>
          </div>
          }
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
